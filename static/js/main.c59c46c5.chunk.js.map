{"version":3,"sources":["layouts/Stack.js","components/Fragment.js","animations.js","components/Button.js","states/Intro.js","levenshteinDistance.js","useGameState.js","useTimer.js","components/WordInput.js","components/WordHint.js","components/WordLog.js","components/DonutTimer.js","states/Game.js","App.js","serviceWorker.js","index.js"],"names":["VerticalStack","styled","motion","div","HorizontalStack","HowToPlay","HowToAcceptHint","UseOnceRule","ValidWordRule","ValidWordHint","DifferenceRule","staggerChildren","animate","transition","fadeInUp","initial","y","opacity","duration","hoverShadow","hover","scale","boxShadow","Button","button","HoverButton","variants","children","props","whileHover","whileTap","ulStyle","css","Intro","onStart","exit","className","li","onClick","levenshteinDistance","word1","word2","n","length","m","cost","x","e","d","Array","i","j","Math","min","useGameState","dictionary","initialWord","initialWordRef","useRef","current","candidates","Object","keys","filter","w","parseInt","random","useState","word","setWord","wordsSeen","setWordsSeen","wordState","setWordState","timer","Error","started","Date","now","remaining","setRemaining","isDone","useEffect","intervalId","setInterval","newRemaining","max","clearInterval","useTimer","lastWord","indexOf","distance","inputProps","value","disabled","onChange","event","newWord","target","toLowerCase","onKeyUp","key","inputStyle","invalidStyle","validStyle","pendingStyle","wordStateColor","React","forwardRef","ref","spellCheck","cx","CONTENT_FOR_STATE","style","WordHint","rest","WordInput","join","DonutTimer","size","strokeWidth","radius","circumference","PI","offset","title","floor","viewBox","width","height","role","aria-live","aria-atomic","dominantBaseline","textAnchor","stroke","fill","cy","r","strokeDasharray","strokeDashoffset","transform","Game","onExit","gameState","window","_WORDS","inputRef","focus","WordLog","centered","fullScreen","header","App","stageContent","stage","setStage","h1","stiffness","type","exitBeforeEnter","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c59c46c5.chunk.js","sourcesContent":["import styled from '@emotion/styled'\nimport { motion } from 'framer-motion'\n\nexport const VerticalStack = styled(motion.div)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  & > * + * {\n    margin-top: 1rem;\n  }\n`\n\nexport const HorizontalStack = styled(motion.div)`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n\n  & > * + * {\n    margin-left: 1rem;\n  }\n`","import React from 'react';\n\nexport const Explanation = <>\n  Lexery is a fast paced word game.\n</>\n\nexport const HowToPlay = <>\n  Add, remove, or replace a letter to form another word.\n</>\n\nexport const HowToAcceptHint = <>\n  Hit <kbd>Enter</kbd> to accept a word.\n</>\n\nexport const UseOnceRule = <>\n  You can only use each word once.\n</>\n\nexport const ValidWordRule = <>\n  Words must be in the dictionary.\n</>\n\nexport const ValidWordHint = <>\n  Words must be in the dictionary, hit <kbd>Esc</kbd> to reset.\n</>\n\nexport const DifferenceRule = <>\n  Words can only differ by one letter.\n</>\n\n","export const staggerChildren = {\n  animate: {\n    transition: {\n      staggerChildren: 0.1\n    }\n  },\n};\n\nexport const fadeInUp = {\n  initial: {\n    y: 60,\n    opacity: 0,\n    transition: { duration: 0.6 }\n  },\n  animate: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      duration: 0.6,\n    }\n  },\n};\n\nexport const hoverShadow = {\n  hover: {\n    scale: 1.05,\n    y: 2,\n    boxShadow: '0 8px 16px #ccc'\n  }\n}","import React from 'react'\nimport styled from '@emotion/styled'\nimport { motion } from 'framer-motion'\nimport { hoverShadow } from '../animations'\n\nconst Button = styled(motion.button)`\n  font-size: 0.9rem;\n  border-radius: 1.5rem;\n  padding: 0.25rem 2rem;\n  padding-bottom: 0.4rem;\n  border: 2px solid currentColor;\n  background: rgba(255,255,255,0.6);\n  font-weight: 700;\n  text-transform: uppercase;\n`\nexport const HoverButton = ({variants = {}, children, ...props}) => (\n  <Button whileHover=\"hover\" whileTap=\"hover\" variants={{ ...hoverShadow, ...variants }} {...props}>\n    { children }\n  </Button>\n)\n\nexport default Button","import React from 'react'\nimport { css } from 'emotion'\nimport { motion } from \"framer-motion\"\n\nimport { VerticalStack } from '../layouts/Stack'\nimport { HowToPlay, HowToAcceptHint, ValidWordRule, UseOnceRule, DifferenceRule } from '../components/Fragment'\nimport { HoverButton } from '../components/Button'\nimport { staggerChildren, fadeInUp } from '../animations'\n\nconst ulStyle = css(`\n  margin: 0;\n  padding: 0;\n  padding-left: 1.2rem;\n  line-height: 1.4;\n`)\n\nexport default function Intro({ onStart }) {\n  return (\n    <VerticalStack initial='initial' animate='animate' variants={staggerChildren} exit='initial' >\n      <ul className={ulStyle}>\n        <motion.li variants={fadeInUp} >{HowToPlay}</motion.li>\n        <motion.li variants={fadeInUp} >{HowToAcceptHint}</motion.li>\n        <motion.li variants={fadeInUp} >{ValidWordRule}</motion.li>\n        <motion.li variants={fadeInUp} >{UseOnceRule}</motion.li>\n        <motion.li variants={fadeInUp} >{DifferenceRule}</motion.li>\n      </ul>\n      <HoverButton variants={fadeInUp} onClick={onStart}>Start</HoverButton>\n    </VerticalStack>\n  )\n}","// Support function for computing the Levenshtein Distance for two words\n// translated to js from http://rubyforge.org/projects/text\nfunction levenshteinDistance(word1, word2){\n  if (word1 === word2) return 0;\n  \n  const n = word1.length; \n  const m = word2.length;\n\n\tif (0 === n) return m;\n  if (0 === m) return n;\n  \n  var d = new Array(m); \n  for(var i = 0; i <= m; d[i] = i++); // d = 0..m\n\n  let cost, x, e;\n  \n\tfor(let i = 0; i < n; i++){\n\t\te = i + 1;\n\t\tfor(var j = 0; j < m; j++){\n\t\t\tcost = (word1[i] === word2[j]) ? 0 : 1;\n      x = Math.min(\n\t\t\t\td[j+1] + 1, // insertion\n        e + 1,      // deletion\n        d[j] + cost // substitution\n\t\t\t);\n      d[j] = e;\n      e = x;\n\t\t}\n\t\td[m] = x;\n\t}\n\n\treturn x;\n}\n\nexport default levenshteinDistance;","import { useEffect, useState, useRef } from 'react'\nimport distance from './levenshteinDistance'\nimport useTimer from './useTimer'\n\n\nexport const PENDING = \"PENDING\"\nexport const VALID = \"VALID\"\nexport const UNKNOWN = \"UNKNOWN\"\nexport const DIFFERENCE = \"DIFFERENCE\"\nexport const SEEN = \"SEEN\"\n\nexport default function useGameState(dictionary, initialWord) {\n  const initialWordRef = useRef(initialWord)\n\n  if (!initialWordRef.current) {\n    const candidates = Object.keys(dictionary).filter(w => w.length === 5)\n    initialWordRef.current = candidates[parseInt(Math.random() * candidates.length)]\n  }\n  const [word, setWord] = useState(initialWordRef.current)\n  const [wordsSeen, setWordsSeen] = useState([initialWordRef.current])\n  const [wordState, setWordState] = useState(PENDING)\n  const timer = useTimer(60 * 1000)\n  \n  useEffect(() => {\n    const lastWord = wordsSeen[wordsSeen.length - 1]\n\n    if (word === lastWord) {\n      setWordState(PENDING)\n    } else if (!dictionary[word]) {\n      setWordState(UNKNOWN)\n    } else if (wordsSeen.indexOf(word) >= 0) {\n      setWordState(SEEN)\n    } else if (distance(lastWord, word) !== 1) {\n      setWordState(DIFFERENCE)\n    } else {\n      setWordState(VALID);\n    }\n  }, [word, wordsSeen, dictionary])\n\n  function onChange(event) {\n    const newWord = event.target.value.toLowerCase()\n    setWord(newWord)\n  }\n\n  function onKeyUp(event) {\n    if (event.key === 'Enter') {\n      onSubmit()\n    } else if (event.key === 'Escape') {\n      onReset()\n    }\n  }\n\n  function onSubmit() {\n    if (wordState === VALID) {\n      setWordsSeen([...wordsSeen, word])\n    }\n  }\n\n  function onReset() {\n    setWord(wordsSeen[wordsSeen.length - 1])\n  }\n\n  return ({\n    inputProps: {\n      value: word,\n      disabled: timer.isDone,\n      onChange,\n      onKeyUp,\n    },\n    word,\n    wordState,\n    wordsSeen,\n    timer,\n  })\n}","import { useEffect, useState, useRef } from 'react'\n\nconst INTERVAL = 100\n\nexport default function useTimer(duration) {\n  if (!duration) throw new Error('Duration required')\n\n  const started = useRef()\n  started.current = started.current || Date.now()\n\n  const [remaining, setRemaining] = useState(duration)\n  const isDone = remaining <= 0\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const newRemaining = Math.max(0, duration - (Date.now() - started.current))\n      setRemaining(newRemaining)\n      \n      if (newRemaining <= 0) {\n        clearInterval(intervalId)\n      }\n    }, INTERVAL)\n\n    return () => clearInterval(intervalId)\n  }, [duration])\n\n  return {\n    remaining,\n    duration,\n    isDone,\n  }\n}","import React from 'react';\nimport { css, cx } from 'emotion'\nimport { PENDING, VALID } from '../useGameState'\n\nconst inputStyle = css(`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  border: 2px solid currentColor;\n  font-size: 2rem;\n  width: 32rem;\n  outline: none;\n  transition: color 250ms ease-in-out;\n\n  [disabled] {\n    color: inherit;\n    opacity: 0.125;\n  }\n`)\n\nconst invalidStyle = css(`\n  color: #ff5722;\n`)\n\nconst validStyle = css(`\n  color: #009688;\n`)\n\nconst pendingStyle = css(`\n  color: #424242;\n`)\n\nconst wordStateColor = (wordState) => {\n  if (wordState === VALID) return validStyle;\n  if (wordState === PENDING) return pendingStyle;\n\n  return invalidStyle\n}\n\nconst WordInput = ({wordState, ...inputProps}, ref) => {\n  return (\n    <input \n      ref={ref}\n      spellCheck={false} \n      {...inputProps} \n      className={cx(inputStyle, wordStateColor(wordState))} \n    />\n  )\n}\n\nexport default React.forwardRef(WordInput)","import React from 'react';\nimport { css } from 'emotion'\nimport { PENDING, VALID, SEEN, UNKNOWN, DIFFERENCE } from '../useGameState'\nimport { HowToPlay, HowToAcceptHint, UseOnceRule, ValidWordHint, DifferenceRule } from './Fragment';\nimport { motion } from 'framer-motion';\n\nconst CONTENT_FOR_STATE = {\n  [PENDING]: HowToPlay,\n  [VALID]: HowToAcceptHint,\n  [SEEN]: UseOnceRule,\n  [UNKNOWN]: ValidWordHint,\n  [DIFFERENCE]: DifferenceRule,\n}\n\nconst style = css(`\n  font-size: 1rem;\n  color: #424242;\n`)\n\nconst WordHint = ({wordState, ...rest}) => {\n  return (\n    <motion.div className={style} {...rest}>\n      {CONTENT_FOR_STATE[wordState] || <>&nbsp;</> }\n    </motion.div>\n  )\n}\n\nexport default WordHint","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst WordInput = ({wordsSeen, ...rest}) => {\n  return (\n    <motion.div {...rest}>\n      ○ {wordsSeen.join(\" → \")}\n    </motion.div>\n  )\n}\n\nexport default WordInput","import React from 'react'\nimport { css } from 'emotion'\n\nconst style = css(`\n  fill: none;\n  stroke: currentcolor;\n  font-variant-numeric: tabular-nums;\n`)\n\n// Copied from https://github.com/system-ui/theme-ui/blob/master/packages/components/src/Donut.js\nconst DonutTimer = React.forwardRef(\n  (\n    {\n      size = '1.2em',\n      strokeWidth = 2,\n      timer,\n      ...props\n    },\n    ref\n  ) => {\n\n    const radius = 16 - parseInt(strokeWidth,0)\n    const circumference = 2 * radius * Math.PI\n    const offset = circumference - (timer.remaining / timer.duration) * circumference\n    const title = Math.floor(timer.remaining / 1000)\n\n    return (\n      <svg\n        ref={ref}\n        viewBox=\"0 0 32 32\"\n        width={size}\n        height={size}\n        strokeWidth={strokeWidth}\n        role=\"timer\" \n        aria-live=\"polite\" \n        aria-atomic=\"true\"\n        className={style}\n\n        {...props}\n      >\n        {title && <title>{title}</title>}\n          <text \n            x=\"50%\" \n            y=\"53%\" \n            dominantBaseline=\"middle\" \n            textAnchor=\"middle\"\n            stroke=\"none\"\n            fill=\"currentcolor\"\n            opacity={timer.remaining > 0 ? 1 : 1 / 8}\n          >\n            {title}\n          </text> \n        <circle cx={16} cy={16} r={radius} opacity={1 / 8} />\n        <circle\n          cx={16}\n          cy={16}\n          r={radius}\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          transform=\"rotate(-90 16 16)\"\n        />\n      </svg>\n    )\n  }\n)\n\nexport default DonutTimer","import React, { useRef, useEffect } from 'react'\nimport WordInput from '../components/WordInput'\nimport WordHint from '../components/WordHint'\nimport WordLog from '../components/WordLog'\nimport DonutTimer from '../components/DonutTimer'\nimport useGameState from '../useGameState'\nimport { VerticalStack, HorizontalStack } from '../layouts/Stack'\nimport { HoverButton } from '../components/Button'\nimport { staggerChildren, fadeInUp } from '../animations'\n\nexport default function Game({ onExit }) {\n  const gameState = useGameState(window._WORDS)\n  const inputRef = useRef()\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [inputRef])\n\n  return (\n    <VerticalStack initial='initial' animate='animate' variants={staggerChildren} exit='initial' >\n      <HorizontalStack variants={fadeInUp} >\n        <WordInput {...gameState.inputProps} wordState={gameState.wordState} ref={inputRef} />\n        <DonutTimer timer={gameState.timer} size={'3.5rem'} strokeWidth={'1.25px'} />\n      </HorizontalStack>\n\n      <WordHint variants={fadeInUp} wordState={gameState.wordState} />\n      <WordLog variants={fadeInUp} wordsSeen={gameState.wordsSeen} />\n\n      {gameState.timer.isDone && (\n        <HoverButton variants={fadeInUp} onClick={onExit}>Main Menu</HoverButton>\n      )}\n    </VerticalStack>\n  );\n}","import React, { useState } from 'react'\nimport { css, cx } from 'emotion'\nimport { VerticalStack } from './layouts/Stack'\nimport Intro from './states/Intro'\nimport Game from './states/Game'\nimport { AnimatePresence, motion } from 'framer-motion'\n\nconst INTRO = \"INTRO\";\nconst GAME = \"GAME\";\n\nconst centered = css(`\n  display: flex;\n  justify-content: center;\n`)\n\nconst fullScreen = css(`\n  min-height: 100vh;\n  width: 100%;\n  margin-top: 10vh;\n`)\n\nconst header = css(`\n  font-size: 4rem;\n  font-weight: bold;\n  margin: 0;\n`)\n\nfunction App() {\n  const [stage, setStage] = useState(INTRO)\n  \n  const startGame = () => {\n    setStage(GAME)\n  }\n\n  const startIntro = () => {\n    setStage(INTRO)\n  }\n\n  let stageContent\n  if (stage === INTRO) {\n    stageContent = <Intro key=\"intro\" onStart={startGame}/>\n  } else if (stage === GAME) {\n    stageContent = <Game key=\"game\" onExit={startIntro}/>\n  } else {\n    throw new Error(\"Unknown Stage \" + stage)\n  }\n\n  return (\n    <div className={cx(fullScreen, centered)}>\n      <VerticalStack className={css(`width: 40rem;`)}>\n        <motion.h1 className={header} initial={{scale: 0.8}} animate={{scale: 1}} transition={{duration: 0.25, stiffness: 50, type: 'spring'}}>\n          Lexery\n        </motion.h1>\n        <AnimatePresence exitBeforeEnter>\n          { stageContent }\n        </AnimatePresence>\n      </VerticalStack>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}